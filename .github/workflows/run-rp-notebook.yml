name: 'Run RP Jupyter notebook'

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version for running the Jupyter notebook'
        required: true
        type: string
      requirements-file:
        description: 'File with dependencies'
        required: false
        default: 'requirements-docs.txt'
        type: string
      notebook-name:
        description: 'File name of the Jupyter notebook'
        required: true
        type: string
      documentation-path:
        description: 'Path of the documentation in the repository'
        required: false
        default: 'docs/source'
        type: string
      notebook-path:
        description: 'Path of the Jupyter notebook within the documentation'
        required: false
        default: ''
        type: string

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install dependencies
        run: |
          python -m venv testenv
          . testenv/bin/activate
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r ${{ inputs.requirements-file }}
          python -m pip install jupyter
      - name: Run Jupyter Notebook
        env:
          TARGET_PATH: ${{ format('{0}/{1}/{2}', inputs.documentation-path, inputs.notebook-path, inputs.notebook-name) }}
        timeout-minutes: 5
        # continue-on-error: true
        run: |
          . testenv/bin/activate
          jupyter nbconvert --clear-output --inplace $TARGET_PATH
          jupyter nbconvert --to notebook --execute --inplace $TARGET_PATH
      - name: Collect sessions
        if: always()
        run: |
          SIDCLIENT=$(find . -name "rp.session*" -type d -exec basename {} "rp.session" \;)
          echo "SIDCLIENT collect session : $SIDCLIENT"
          SIDAGENT="$HOME/radical.pilot.sandbox/$SIDCLIENT"
          CLIENTNAME="${{inputs.notebook-name}}_client_$SIDCLIENT"
          AGENTNAME="${{inputs.notebook-name}}_agent_$SIDCLIENT"
          mkdir sessions_notebooks
          tar cvfj $CLIENTNAME.tar.bz2 `find $SIDCLIENT -type d -print`
          cp -R $CLIENTNAME.tar.bz2 sessions_notebooks
          if [ -d "$SIDAGENT" ]; then
            tar cvfj $AGENTNAME.tar.bz2 `find $SIDAGENT -type d -print`
            cp -R $AGENTNAME.tar.bz2 sessions_notebooks
          fi
      - name: upload session
        if: always()
        uses: actions/upload-artifact@v3
        with:
            name: sessions_notebooks
            path: sessions_notebooks
            retention-days: 5
